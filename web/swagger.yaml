# Swagger scheme for the project
# Symlink to root directory in the web directory (please always commit both)
openapi: '3.0.1'
info:
  version: '1.1'
  title: "Schedu"
  description: Student-friendly Assignments and Deadlines Management System
  license:
    name: Apache 2.0
    url: https://github.com/Schedu-Team/schedu/blob/master/LICENSE
servers:
  - url: https://api.schedu.wlko.me/api/v1
  - url: http://localhost:8080/api/v1
  - url: http://clabsql.clamv.jacobs-university.de:30566/api/v1
paths:
  /groups/add:
    x-summary: Add groups
    post:
      summary: Create a New Group
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRequest'
      responses:
        200:
          description: 'Successfully created'
          content:
            application/json:
              schema:
                type: object
                properties:
                  insertion_id:
                    type: number
                  insertion_data:
                    $ref: '#/components/schemas/Group'
        400:
          description: 'Bad request'
      security:
        - MarkToken: [ ]
  /groups/all:
    x-summary: List all groups
    get:
      summary: List all groups
      responses:
        200:
          description: 'Successfully lists all groups'
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: array
                    items:
                      $ref: '#/components/schemas/Group'
                required:
                  - response
        400:
          description: 'Bad request'
  /users/add:
    x-summary: Add User
    post:
      summary: Create a New User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
      responses:
        200:
          description: 'Successfully created'
          content:
            application/json:
              schema:
                type: object
                properties:
                  insertion_id:
                    type: number
                  insertion_data:
                    $ref: '#/components/schemas/User'
        400:
          description: 'Bad request'
      security:
        - MarkToken: [ ]
  /users/all:
    x-summary: List all Users
    get:
      summary: List all Users
      responses:
        200:
          description: 'Successfully lists all users'
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
                required:
                  - response
        400:
          description: 'Bad request'
  /assignments/add:
    x-summary: Add Assignment
    post:
      summary: Create a New Assignment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignmentRequest'
      responses:
        200:
          description: 'Successfully created'

          content:
            application/json:
              schema:
                type: object
                properties:
                  insertion_id:
                    type: number
                  insertion_data:
                    $ref: '#/components/schemas/Assignment'
        400:
          description: 'Bad request'
      security:
        - MarkToken: [ ]
  /assignments/all:
    x-summary: List Assignments
    get:
      responses:
        200:
          description: 'Successfully created'
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: array
                    items:
                      $ref: '#/components/schemas/Assignment'
                required:
                  - response
        400:
          description: 'Bad request'
  /roles/add:
    x-summary: Add Role
    post:
      summary: Create a New Role
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleRequest'
      responses:
        200:
          description: 'Successfully created'
          content:
            application/json:
              schema:
                type: object
                properties:
                  insertion_id:
                    type: number
                  insertion_data:
                    $ref: '#/components/schemas/Role'
        400:
          description: 'Bad request'
      security:
        - MarkToken: [ ]
  /roles/all:
    x-summary: List Roles
    get:
      responses:
        200:
          description: 'Successfully lists roles'
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: array
                    items:
                      $ref: '#/components/schemas/Role'
                required:
                  - response
        400:
          description: 'Bad request'
  /permissions/add:
    x-summary: Add Permission
    post:
      summary: Create a New Permission
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PermissionRequest'
      responses:
        200:
          description: 'Successfully created'
          content:
            application/json:
              schema:
                type: object
                properties:
                  insertion_id:
                    type: number
                  insertion_data:
                    $ref: '#/components/schemas/Permission'
        400:
          description: 'Bad request'
      security:
        - MarkToken: [ ]
  /permissions/all:
    x-summary: List Permissions
    get:
      responses:
        200:
          description: 'Successfully lists permissions'
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: array
                    items:
                      $ref: '#/components/schemas/Permission'
                required:
                  - response
        400:
          description: 'Bad request'
  /public_groups/add:
    x-summary: Add public group
    post:
      summary: Create a New Public Group
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublicGroup'
      responses:
        200:
          description: 'Successfully created'
          content:
            application/json:
              schema:
                type: object
                properties:
                  insertion_id:
                    type: number
                  insertion_data:
                    $ref: '#/components/schemas/PublicGroup'
        400:
          description: 'Bad request'
      security:
        - MarkToken: [ ]
  /public_groups/all:
    x-summary: List Public Groups
    get:
      responses:
        200:
          description: 'Successfully lists public groups'
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: array
                    items:
                      $ref: '#/components/schemas/PublicGroup'
                required:
                  - response
        400:
          description: 'Bad request'
  /temporary_roles/add:
    x-summary: Add temporary role
    post:
      summary: Create a New Temporary role
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemporaryRole'
      responses:
        200:
          description: 'Successfully created'
          content:
            application/json:
              schema:
                type: object
                properties:
                  insertion_id:
                    type: number
                  insertion_data:
                    $ref: '#/components/schemas/TemporaryRole'
        400:
          description: 'Bad request'
      security:
        - MarkToken: [ ]
  /delayed_assignments/add:
    x-summary: Add delayed assignments
    post:
      summary: Create a New Delayed Assignments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DelayedAssignment'
      responses:
        200:
          description: 'Successfully created'
          content:
            application/json:
              schema:
                type: object
                properties:
                  insertion_id:
                    type: number
                  insertion_data:
                    $ref: '#/components/schemas/DelayedAssignment'
        400:
          description: 'Bad request'
      security:
        - MarkToken: [ ]
  /user_member_of_group/add:
    x-summary: Add member
    post:
      summary: Create a Member
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Member'
      responses:
        200:
          description: 'Successfully created'
          content:
            application/json:
              schema:
                type: object
                properties:
                  insertion_id:
                    type: number
                  insertion_data:
                    $ref: '#/components/schemas/Member'
        400:
          description: 'Bad request'
      security:
        - MarkToken: [ ]
  /user_has_role/add:
    x-summary: Add UserHasRole
    post:
      summary: Create a New UserHasRole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserHasRole'
      responses:
        200:
          description: 'Successfully created'
          content:
            application/json:
              schema:
                type: object
                properties:
                  insertion_id:
                    type: number
                  insertion_data:
                    $ref: '#/components/schemas/UserHasRole'
        400:
          description: 'Bad request'
      security:
        - MarkToken: [ ]
  /user_has_completed_assignment/add:
    x-summary: Add completed assignment
    post:
      summary: Create a New Completed
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCompletedAssignment'
      responses:
        200:
          description: 'Successfully created'
          content:
            application/json:
              schema:
                type: object
                properties:
                  insertion_id:
                    type: number
                  insertion_data:
                    $ref: '#/components/schemas/UserCompletedAssignment'
        400:
          description: 'Bad request'
      security:
        - MarkToken: [ ]
  /assignment_created_by_user/add:
    x-summary: Add completed assignment
    post:
      summary: Create a New Completed
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreatedAssignment'
      responses:
        200:
          description: 'Successfully created'
          content:
            application/json:
              schema:
                type: object
                properties:
                  insertion_id:
                    type: number
                  insertion_data:
                    $ref: '#/components/schemas/UserCreatedAssignment'
        400:
          description: 'Bad request'
      security:
        - MarkToken: [ ]
  /user/login:
    post:
      summary: Get token for using guarded methods
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        200:
          description: Successfully acquired a token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
        400:
          description: Unable to authenticate
components:
  schemas:
    InsertionResult:
      title: Result of a successful insertion to the database
      type: object
      properties:
        inserted_id:
          type: integer
        inserted_data:
          type: object
      required:
        - inserted_id
        - inserted_data
      example:
        inserted_id: 1
        inserted_data:
          type: object
          properties:
    GroupRequest:
      title: Group Request
      type: object
      properties:
        name:
          type: string
        description:
          type: string
      required:
        - name
        - description
      example:
        name: F22_CO-562-A
        description: Second Year 2022 Operating Systems
    Group:
      title: Group
      type: object
      properties:
        group_id:
          type: number
        name:
          type: string
        description:
          type: string
      required:
        - group_id
        - name
        - description
      example:
        group_id: 0
        name: F22_CO-562-A
        description: Second Year 2022 Operating Systems
    User:
      title: User
      type: object
      properties:
        user_id:
          type: number
        first_name:
          type: string
        last_name:
          type: string
        password_hash:
          type: string
        email:
          type: string
        graduation_year:
          type: number
        username:
          type: string
      required:
        - user_id
        - first_name
        - last_name
        - password_hash
        - username
      example:
        user_id: 0
        first_name: John
        last_name: Smith
        password_hash: aboba
        email: john@smith.me
        graduation_year: 2024
        username: johnsmith
    UserRequest:
      title: UserRequest
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        password_hash:
          type: string
        email:
          type: string
        graduation_year:
          type: number
        username:
          type: string
      required:
        - first_name
        - last_name
        - password_hash
        - username
      example:
        first_name: John
        last_name: Smith
        password_hash: aboba
        email: john@smith.me
        graduation_year: 2024
        username: johnsmith
    Assignment:
      type: object
      properties:
        assignment_id:
          type: number
        deadline:
          type: string
          format: date-time
        text:
          type: string
      required:
        - assignment_id
        - deadline
        - text
      example:
        assignment_id: 1
        deadline: "2022-10-27T23:59"
        text: DBWS Assignment
    AssignmentRequest:
      type: object
      properties:
        deadline:
          type: string
          format: date-time
        text:
          type: string
      required:
        - deadline
        - text
      example:
        deadline: "2022-10-27T23:59"
        text: DBWS Assignment
    Role:
      type: object
      properties:
        role_id:
          type: number
        name:
          type: string
        description:
          type: string
      required:
        - role_id
        - name
        - description
      example:
        role_id: 0
        name: Admin
        description: Has access to all resources
    RoleRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
      required:
        - name
        - description
      example:
        name: Admin
        description: Has access to all resources
    Permission:
      type: object
      properties:
        permission_id:
          type: number
        name:
          type: string
        description:
          type: string
        type:
          type: number
      required:
        - permission_id
        - name
        - description
        - type
      example:
        permission_id: 0
        name: DeadlinesModify
        description: Can change deadlines
    PermissionRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        type:
          type: number
      required:
        - name
        - description
        - type
      example:
        name: DeadlinesModify
        description: Can change deadlines
    PublicGroup:
      type: object
      properties:
        group_id:
          type: number
        default_role_id:
          type: number
      required:
        - group_id
        - default_role_id
      example:
        group_id: 0
        default_role_id: 1
    TemporaryRole:
      type: object
      properties:
        role_id:
          type: number
        expiry_date:
          type: string
          format: date-time
      required:
        - role_id
        - expiry_date
      example:
        role_id: 0
        expiry_date: "2022-10-27T23:59"
    DelayedAssignment:
      type: object
      properties:
        assignment_id:
          type: number
        publication_date:
          type: string
          format: date-time
      required:
        - assignment_id
        - publication_date
      example:
        assignment_id: 0
        publication_date: "2022-10-27T23:59"
    Member:
      type: object
      properties:
        user_id:
          type: number
        group_id:
          type: number
      required:
        - user_id
        - group_id
      example:
        user_id: 0
        group_id: 3
    UserHasRole:
      type: object
      properties:
        user_id:
          type: number
        role_id:
          type: number
      required:
        - user_id
        - role_id
      example:
        user_id: 0
        role_id: 239
    UserCompletedAssignment:
      type: object
      properties:
        user_id:
          type: number
        assignment_id:
          type: number
        timestamp:
          type: string
          format: date-time
      example:
        user_id: 0
        assignment_id: 3
        timestamp: "2022-10-27T20:00"
    UserCreatedAssignment:
      type: object
      properties:
        user_id:
          type: number
        assignment_id:
          type: number
        timestamp:
          type: string
          format: date-time
      example:
        user_id: 0
        assignment_id: 3
        timestamp: "2022-10-27T20:00"
    Token:
      type: object
      properties:
        Token:
          type: string
          example: "tokentoken123"
      required:
        - Token
    LoginRequest:
      type: object
      properties:
        username:
          type: string
          example: "admin"
        password:
          type: string
          example: "password"
      required:
        - username
        - password
  securitySchemes:
    MarkToken:
      type: http
      scheme: bearer
      bearerFormat: "Mark's token format"
