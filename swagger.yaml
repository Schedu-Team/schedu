swagger: '2.0'
info:
  version: '1.0'
  title: "Schedu"
  description: Polls is a simple API allowing consumers to view polls and vote in them.
  license:
    name: Apache 2.0
    url: https://github.com/Schedu-Team/schedu/blob/master/LICENSE
host: localhost
basePath: /api/v1/
schemes:
- https
- http
consumes:
- application/json
produces:
- application/json
paths:
  /groups/add:
    x-summary: Add groups
    post:
      summary: Create a New Group
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GroupRequest'
      responses:
        200:
          description: 'Successfully created'
          schema:
            type: object
            properties:
              insertion_id:
                type: number
              insertion_data:
                $ref: '#/definitions/Group'
          examples:
            application/json:
               insertion_id: 1
               insertion_data:
                group_id: 0
                name: F22_CO-562-A
                description: Second Year 2022 Operating Systems
        400:
          description: 'Bad request'
  /groups/all:
    x-summary: List all groups
    get:
      summary: List all groups
      responses:
        200:
          description: 'Successfully lists all groups'
          schema:
            type: array
            items:
              $ref: '#/definitions/Group'
          examples:
            application/json:
              - group_id: 0
                name: F22_CO-562-A
                description: Second Year 2022 Operating Systems
              - group_id: 1
                name: F22_CO-560-A
                description: Second Year 2022 Databases and Web Services
        400:
          description: 'Bad request'
  /users/add:
    x-summary: Add User
    post:
      summary: Create a New User
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UserRequest'
      responses:
        200:
          description: 'Successfully created'
          schema:
            type: object
            properties:
              insertion_id:
                type: number
              insertion_data:
                $ref: '#/definitions/User'
          examples:
            application/json:
               insertion_id: 1
               insertion_data:
                user_id: 0
                first_name: John
                last_name: Smith
                password_hash: aboba
                password_salt: salt
                email: john@smith.me
                gradation_year: 2024
        400:
          description: 'Bad request'
  /users/all:
    x-summary: List all Users
    get:
      summary: List all Users
      responses:
        200:
          description: 'Successfully lists all users'
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
          examples:
            application/json:
              - user_id: 0
                first_name: John
                last_name: Smith
                password_hash: aboba
                password_salt: salt
                email: john@smith.me
                gradation_year: 2024
              - user_id: 1
                first_name: Roger
                last_name: White
                password_hash: skibidi
                password_salt: pepper
                email: roger.white@gmail.com
                gradation_year: 2025
        400:
          description: 'Bad request'
definitions:
  InsertionResult:
    title: Result of a successful insertion to the database
    type: object
    properties:
      inserted_id:
        type: integer
      inserted_data:
        type: object
    required:
      - inserted_id
      - inserted_data
    example:
      inserted_id: 1
      inserted_data:
        type: object
        properties:
  GroupRequest:
    title: Group Request
    type: object
    properties:
      name:
        type: string
      description:
        type: string
    required:
      - name
      - description
    example:
      name: F22_CO-562-A
      description: Second Year 2022 Operating Systems
  Group:
    title: Group
    type: object
    properties:
      group_id:
        type: number
      name:
        type: string
      description:
        type: string
    required:
      - group_id
      - name
      - description
    example:
      group_id: 0
      name: F22_CO-562-A
      description: Second Year 2022 Operating Systems
  User:
    title: User
    type: object
    properties:
      user_id:
        type: number
      first_name:
        type: string
      last_name:
        type: string
      password_hash:
        type: string
      password_salt:
        type: string
      email:
        type: string
      graduation_year:
        type: number
    required:
      - user_id
      - first_name
      - last_name
      - password_hash
      - password_salt
      - email
      - graduation_year
    example:
      user_id: 0
      first_name: John
      last_name: Smith
      password_hash: aboba
      password_salt: salt
      email: john@smith.me
      gradation_year: 2024
  UserRequest:
    title: UserRequest
    type: object
    properties:
      first_name:
        type: string
      last_name:
        type: string
      password_hash:
        type: string
      password_salt:
        type: string
      email:
        type: string
      graduation_year:
        type: number
    required:
      - first_name
      - last_name
      - password_hash
      - password_salt
      - email
      - graduation_year
    example:
      first_name: John
      last_name: Smith
      password_hash: aboba
      password_salt: salt
      email: john@smith.me
      gradation_year: 2024